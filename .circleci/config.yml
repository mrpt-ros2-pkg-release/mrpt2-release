version: 2
jobs:
  full:
    docker:
      - image: mrpt/mrpt-build-env:full-bionic
    steps:
      - checkout
      - run: cmake -DBUILD_EXAMPLES=On -DBUILD_TESTING=On -DENABLE_COVERAGE=On -H. -Bbuild
      - run: make -C build tests_build_all
      - run: make CTEST_OUTPUT_ON_FAILURE=1 test -C build
      - run: make gcov -C build
      - run: make -C build
      - run: bash <(curl -s https://codecov.io/bash) -X gcov -y .codecov.yml -s build
  clang:
    docker:
      - image: mrpt/mrpt-build-env:full-bionic
    steps:
      - checkout
      - run:
          name: Generate cmake files
          command: cmake -DBUILD_EXAMPLES=On -DBUILD_TESTING=On -DENABLE_COVERAGE=On -H. -Bbuild
          environment:
            CC: /usr/bin/clang-6.0
            CXX: /usr/bin/clang++-6.0
      - run: make -C build tests_build_all
      - run: make CTEST_OUTPUT_ON_FAILURE=1 test -C build
      - run: make gcov -C build
      - run: make -C build
      - run: bash <(curl -s https://codecov.io/bash) -X gcov -y .codecov.yml -s build
  headless:
    docker:
      - image: mrpt/mrpt-build-env:headless-bionic
    steps:
      - checkout
      - run: cmake -DBUILD_EXAMPLES=On -DBUILD_TESTING=On -DENABLE_COVERAGE=On -H. -Bbuild
      - run: make -C build tests_build_all
      - run: make CTEST_OUTPUT_ON_FAILURE=1 test -C build
      - run: make gcov -C build
      - run: make -C build
      - run: bash <(curl -s https://codecov.io/bash) -X gcov -y .codecov.yml -s build
  minimal:
    docker:
      - image: mrpt/mrpt-build-env:minimal-bionic
    steps:
      - checkout
      - run: cmake -DBUILD_EXAMPLES=On -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DDISABLE_PYTHON_BINDINGS=On -DEIGEN_USE_EMBEDDED_VERSION=On -H. -Bbuild
      - run: make -C build tests_build_all
      - run: make CTEST_OUTPUT_ON_FAILURE=1 test -C build
      - run: make gcov -C build
      - run: make -C build
      - run: bash <(curl -s https://codecov.io/bash) -X gcov -y .codecov.yml -s build
  clang-format-lint:
    docker:
      - image: mrpt/mrpt-build-env:full-bionic
    steps:
      - checkout
      - run: pip install --user -r travis/python_reqs.txt
      - run:
          name: Run lint task
          command: bash travis/check_style.sh
          environment:
            TASK: lint_all
  macos:
    macos:
      xcode: "10.2.0"
    working_directory: /Users/distiller/project
    steps:
      - checkout
      - run: brew install cmake
      - run: brew install boost
      - run: brew install nasm
      - run: cmake -DBUILD_EXAMPLES=On -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DDISABLE_PYTHON_BINDINGS=On -DEIGEN_USE_EMBEDDED_VERSION=On -DCMAKE_VERBOSE_MAKEFILE=ON -H. -Bbuild
      - run: make -j4 -C build tests_build_all
      - run: make -j4 CTEST_OUTPUT_ON_FAILURE=1 test -C build
      - run: make -j4 -C build
workflows:
  version: 2
  build:
    jobs:
      - full
      - headless
      - minimal
      - clang
      - clang-format-lint
      - macos
